% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acquire_error.R
\name{compare_two_df}
\alias{compare_two_df}
\title{#' TBC
#'
#' \code{gen_error_acquisition_test_data} randomly assign a Phonetic error to a string.
#'     This function was converted from the Python code in Febrl (developed by
#'     Agus Pudjijono in 2008, refers to reference \url{https://link.springer.com/chapter/10.1007/978-3-642-01307-2_47}.
#'
#' @param string A string.
#' @return It returns the \code{string} with a randomly assgined phonetic error following
#'    rules extracted in the pho_rules dataset. It also comes with the change log of the
#'    transformation.
#' @examples
#' get_transformation_pho('how are you?')
#'
#' @export
gen_error_acquisition_test_data <- function(population){
  df <- data.frame(firstname_variant=character(population),
                   lastname_variant=character(population))
  df <- add_variable(df, "nhsid")
  df <- add_variable(df, "firstname", country = "uk", gender_dependency= FALSE,
                     age_dependency = FALSE)
  df <- add_variable(df, "lastname", country = "uk", gender_dependency= FALSE,
                     age_dependency = FALSE)
  df$firstname <-as.character(df$firstname)
  df$lastname <-as.character(df$lastname)
  for (i in 1:nrow(df)){
    df$firstname_variant[i] = strsplit(get_transformation_name_variant(df$firstname[i]), ',')[[1]][1]
    df$lastname_variant[i] = strsplit(get_transformation_name_variant(df$lastname[i]), ',')[[1]][1]
  }
  df1 = df[c('nhsid', 'firstname', 'lastname')]
  df2 = df[c('nhsid', 'firstname_variant', 'lastname_variant')]
  return(list(goldstandfile = df1, corruptfile = df2))
}}
\usage{
compare_two_df(df1, df2, vars, uniqueId)
}
\description{
#' TBC
#'
#' \code{gen_error_acquisition_test_data} randomly assign a Phonetic error to a string.
#'     This function was converted from the Python code in Febrl (developed by
#'     Agus Pudjijono in 2008, refers to reference \url{https://link.springer.com/chapter/10.1007/978-3-642-01307-2_47}.
#'
#' @param string A string.
#' @return It returns the \code{string} with a randomly assgined phonetic error following
#'    rules extracted in the pho_rules dataset. It also comes with the change log of the
#'    transformation.
#' @examples
#' get_transformation_pho('how are you?')
#'
#' @export
gen_error_acquisition_test_data <- function(population){
  df <- data.frame(firstname_variant=character(population),
                   lastname_variant=character(population))
  df <- add_variable(df, "nhsid")
  df <- add_variable(df, "firstname", country = "uk", gender_dependency= FALSE,
                     age_dependency = FALSE)
  df <- add_variable(df, "lastname", country = "uk", gender_dependency= FALSE,
                     age_dependency = FALSE)
  df$firstname <-as.character(df$firstname)
  df$lastname <-as.character(df$lastname)
  for (i in 1:nrow(df)){
    df$firstname_variant[i] = strsplit(get_transformation_name_variant(df$firstname[i]), ',')[[1]][1]
    df$lastname_variant[i] = strsplit(get_transformation_name_variant(df$lastname[i]), ',')[[1]][1]
  }
  df1 = df[c('nhsid', 'firstname', 'lastname')]
  df2 = df[c('nhsid', 'firstname_variant', 'lastname_variant')]
  return(list(goldstandfile = df1, corruptfile = df2))
}
}
